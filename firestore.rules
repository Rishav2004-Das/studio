
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      // Allow reading individual user profiles (needed for profile pages if they become public)
      allow read: if true; 
      // Allow creating users (signup)
      allow create: if request.auth != null; 
      // Allow users to update/delete their own document
      allow update, delete: if request.auth.uid == userId; 
    }

    // Allow querying the users collection for the leaderboard and search functionality
    match /users/{userId=**} {
       allow list: if true;
    }
    
    // Submissions can be created by authenticated users
    // Submissions can be read by anyone (for the public feed)
    // Submissions can only be updated/deleted by an admin
    match /submissions/{submissionId} {
      allow read, list: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;

      // Rules for the 'comments' subcollection
      match /comments/{commentId} {
        allow read, list: if true;
        allow create: if request.auth != null;
        // Comments shouldn't be updatable/deletable by users for now to keep it simple
      }
    }
    
    // Announcements can be read by anyone
    // Announcements can only be created/deleted by an admin
    match /announcements/{announcementId} {
      allow read: if true;
      allow list: if true;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /redemptionRequests/{requestId} {
      // Users can create their own requests
      allow create: if request.auth.uid == request.resource.data.userId;
      // Admins can read/update/delete all requests
      allow read, list, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

  }
}
